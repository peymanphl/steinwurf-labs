#! /usr/bin/env python
# encoding: utf-8

# Necessary since we override different Contexts 
import waflib.extras.wurftools as wt

APPNAME = 'kodo_relay_simulations'
VERSION = '0.1'

wt.add_dependency('sak', 'git://github.com/steinwurf/sak.git', '1.0.0')

wt.add_dependency('fifi', 'git://github.com/steinwurf/fifi.git', '1.0.1')

wt.add_dependency('boost', 'git://github.com/steinwurf/external-boost.git',
                  '1.1.0-boost_1_48_0')

wt.add_dependency('gtest', 'git://github.com/steinwurf/external-gtest.git',
                  '1.0.1-gtest_1_6_0')

wt.add_dependency('kodo', 'git://github.com/steinwurf/kodo.git', '1.0.3')


def load_helper(ctx, name):
    if ctx.is_system_dependency(name):
        ctx.fatal('Load a tool to find %s as system dependency' % name)
    else:
        ctx.load_dependency(name)

def options(opt):
    opt.load('wurftools')

    load_helper(opt, 'kodo')




def configure(conf):
    conf.load('wurftools')

    load_helper(conf, 'kodo')

    if conf.env.TOOLCHAIN == 'linux':
        conf.env.append_value('CXXFLAGS', ['-O2', '-g', '-ftree-vectorize',
                                           '-Wextra', '-Wall'])

    if conf.env.TOOLCHAIN == 'win32':
        conf.env.append_value('CXXFLAGS', ['/O2', '/Ob2', '/W3', '/EHs'])

 
def build(bld):

    load_helper(bld, 'kodo')


    bld.recurse('relay_simulations')



